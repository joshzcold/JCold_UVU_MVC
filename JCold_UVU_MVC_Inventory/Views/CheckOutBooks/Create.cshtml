@model JCold_UVU_MVC_Inventory.Models.CheckOutBook

@{
    ViewBag.Title = "Check out books";
}





<script>
    $(document).ready(function () {
        $("#autocomplete").focus(function () {
            if ($(this).val() == 'Enter your name') {
                $(this).val("");
            }
        });
        $("#autocomplete").blur(function () {
            if ($(this).val() == '') {
                $(this).val("Enter your name");
            }
        });
        $("#autocomplete").autocomplete({
            select: function (event, ui) {
                $(this).val(ui.item.label);
                $("input[id*=selectedValue]").val(ui.item.value);//Saving the selected value in hidden field
                //                    __doPostBack($("input[id*=btn]").attr("id"), "OnClick")
            },
            source: function (request, response) {
                response($.map(dataArray, function (item) {
                    if (item.label.indexOf($("#autocomplete").val()) == 0) {
                        return {
                            label: item.label,
                            value: item.value
                        }
                    }
                }))
            },
            minLength: 1
        });

    });
</script>

<div>
    <asp:HiddenField ID="selectedValue" runat="server" />
    <asp:TextBox ID="autocomplete" runat="server" Text="Enter your name" />
    <asp:Button id="btn" runat="server" Text="My button" onclick="btn_Click" />
    <a href="#">reset</a>
</div>




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Check out a Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StudentsID, "Student", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StudentsID", null, "Select a Student", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentsID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BooksID, "Book", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" id="BooksID" placeholder="Search Book Titles"/>
                @Html.HiddenFor(model => model.BooksID, new { @id = "hidden_bookid" })

                <script type="text/javascript">
                    $(document).ready(function () {
                        $("#BooksID").autocomplete({
                            source: function (request, response) {
                                $.ajax({
                                    url: "/CheckOutBooks/ReturnBooks",
                                    type: "POST",
                                    dataType: "json",
                                    data: { Prefix: request.term },
                                    success: function (data) {
                                        response($.map(data, function (item) {
                                            return {
                                                label: item.Title + ', ISBN: ' + item.ISBN + ', Number: #' + item.Number + ', Class Room: ' + item.ClassRoom,
                                                value: item.Title + ', ISBN: ' + item.ISBN + ', Number: #' + item.Number + ', Class Room: ' + item.ClassRoom,
                                                id: $('#hidden_bookid').val(item.BooksID)
                                            };
                                        }))

                                    }
                                })
                            },
                            messages: {
                                noResults: "",
                                results: function (count) {
                                    return count + (count > 1 ? ' results' : ' result ') + ' found';
                                }
                            }
                        });
                    })
                </script>



            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentID, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DepartmentID", null, "Select a Department", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, "Due Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckedOutDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CheckedOutDate, "Check out Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckedOutDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckedOutDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Check out" class="btn btn-primary btn-block" />
                <br />
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
